# Generated by platform-helper v0.1-TEST / 2023-08-22 16:00:00
# The manifest for the "web" service.
# Read the full specification for the "Load Balanced Web Service" type at:
#  https://aws.github.io/copilot-cli/docs/manifest/lb-web-service/

# Your service name will be used in naming your resources like log groups, ECS services, etc.
name: web
type: Load Balanced Web Service

# Distribute traffic to your service.
http:
  # Requests to this path will be forwarded to your service.
  # To match all requests you can use the "/" path.
  path: '/'
  # You can specify a custom health check path. The default is "/".
  # healthcheck: '/'
  target_container: nginx
  healthcheck:
    path: '/'
    port: 8080
    success_codes: '200,301,302'
    healthy_threshold: 3
    unhealthy_threshold: 2
    grace_period: 90s

sidecars:
  nginx:
    port: 443
    image: public.ecr.aws/uktrade/nginx-dbt-platform:latest
    variables:
      SERVER: localhost:8000

  ipfilter:
    port: 8000
    image: public.ecr.aws/uktrade/ip-filter:latest
    variables:
      PORT: 8000
      SERVER: localhost:8080
      APPCONFIG_PROFILES: ipfilter:default:default
      IPFILTER_ENABLED: True

  appconfig:
    port: 2772
    image: public.ecr.aws/aws-appconfig/aws-appconfig-agent:2.x
    essential: true
    variables:
      ROLE_ARN: arn:aws:iam::763451185160:role/AppConfigIpFilterRole

# Configuration for your containers and service.
image:
  location: public.ecr.aws/uktrade/copilot-bootstrap:latest
    # Port exposed through your container to route traffic to it.
  port: 8080

cpu: 256       # Number of CPU units for the task.
memory: 512 # Amount of memory in MiB used by the task.
count: # See https://aws.github.io/copilot-cli/docs/manifest/lb-web-service/#count
  range: 2-10
  cooldown:
    in: 120s
    out: 60s
  cpu_percentage: 50
exec: true     # Enable running commands in your container.
network:
  connect: true # Enable Service Connect for intra-environment traffic between services.
  vpc:
    placement: 'private'

# The application currently may not work if the file system is readonly, e.g...
# FileNotFoundError: [Errno 2] No usable temporary directory found in ['/tmp', '/var/tmp', '/usr/tmp', '/workspace']
# ...so you may need to comment out the two lines below...
storage:
  readonly_fs: true       # Limit to read-only access to mounted root filesystems.

# Optional fields for more advanced use-cases.
#
variables:                    # Pass environment variables as key value pairs.
  PORT: 8080


secrets:                      # Pass secrets from AWS Systems Manager (SSM) Parameter Store.
  SECRET_ONE: /copilot/${COPILOT_APPLICATION_NAME}/${COPILOT_ENVIRONMENT_NAME}/secrets/SECRET_ONE
  SECRET_TWO: /copilot/${COPILOT_APPLICATION_NAME}/${COPILOT_ENVIRONMENT_NAME}/secrets/SECRET_TWO


# You can override any of the values defined above by environment.
environments:
  development:
    http:
      alias: test-application.dev.uktrade.digital
