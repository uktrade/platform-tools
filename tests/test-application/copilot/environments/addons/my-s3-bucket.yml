# Generated by copilot-helper 0.1.26 / 2023-08-24 12:55:51
Parameters:
  # Copilot required Parameters...
  App:
    Type: String
    Description: Your application's name.
  Env:
    Type: String
    Description: The environment name your service, job, or workflow is being deployed to.

Mappings:
  myS3BucketBucketNameMap:
    # Create an entry for each environment
    
    staging:
      BucketName: 'my-bucket-staging'
      LoggingBucketName: 'my-bucket-staging-logs'
    
    development:
      BucketName: 'my-bucket-dev'
      LoggingBucketName: 'my-bucket-dev-logs'
    
    production:
      BucketName: 'my-bucket-prod'
      LoggingBucketName: 'my-bucket-prod-logs'
    

Resources:
  myS3BucketLoggingBucket:
    Metadata:
      'aws:copilot:description': 'An Amazon S3 bucket to store logs from myS3BucketBucket'
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !FindInMap [myS3BucketBucketNameMap, !Ref Env, LoggingBucketName]
      AccessControl: Private
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: AES256
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
      Tags:
        - Key: Copilot-application
          Value: !Ref App
        - Key: Copilot-environment
          Value: !Ref Env

  myS3BucketLoggingBucketPolicy:
    Metadata:
      'aws:copilot:description': 'A bucket policy to deny unencrypted access to the bucket and its contents'
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: S3ServerAccessLogsPolicy
            Effect: Allow
            Principal:
              Service: logging.s3.amazonaws.com
            Action: 's3:PutObject'
            Resource:
              - !Sub ${ myS3BucketLoggingBucket.Arn}/*
              - !Sub ${ myS3BucketLoggingBucket.Arn}
            Condition:
              ArnLike:
                'aws:SourceArn': !Sub ${ myS3BucketBucket.Arn}
              StringEquals:
                'aws:SourceAccount': !Sub ${AWS::AccountId}
      Bucket: !Ref myS3BucketLoggingBucket

  myS3BucketBucket:
    Metadata:
      'aws:copilot:description': 'An Amazon S3 bucket to store and retrieve objects for myS3Bucket'
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !FindInMap [myS3BucketBucketNameMap, !Ref Env, BucketName]
      AccessControl: Private
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: AES256
      VersioningConfiguration:
        Status: Enabled
      LoggingConfiguration:
        DestinationBucketName: !FindInMap [myS3BucketBucketNameMap, !Ref Env, LoggingBucketName]
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: Copilot-application
          Value: !Ref App
        - Key: Copilot-environment
          Value: !Ref Env

  myS3BucketBucketPolicy:
    Metadata:
      'aws:copilot:description': 'A bucket policy to deny unencrypted access to the bucket and its contents'
    Type: AWS::S3::BucketPolicy
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: ForceHTTPS
            Effect: Deny
            Principal: '*'
            Action: 's3:*'
            Resource:
              - !Sub ${ myS3BucketBucket.Arn}/*
              - !Sub ${ myS3BucketBucket.Arn}
            Condition:
              Bool:
                "aws:SecureTransport": false
      Bucket: !Ref myS3BucketBucket

Outputs:
  myS3BucketName:
    Description: "The name of a user-defined bucket."
    Value: !Ref myS3BucketBucket
