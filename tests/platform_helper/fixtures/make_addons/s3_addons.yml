extensions:
  ##### s3 bucket example:
  my-s3-bucket:
    # currently no other features are supported such as bucket versioning, etc.  If you need additional features, you can use the s3-policy type to give a service access to an existing bucket.

    type: s3   # creates an s3 bucket in each environment and gives the listed services permissions to access the bucket

    readonly: true  # services are granted read only access to the bucket

    services:  # services that require access to the bucket.
      - "web"

    environments:
      # NOTE: [bucket names must be unique across all AWS accounts in the AWS (Standard Regions) Partition](https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html) and need to be defined for each environment

      development:
        bucket_name: my-bucket-dev
        retention_policy:
          mode: COMPLIANCE
          days: 1

      production:
        bucket_name: my-bucket-prod
        retention_policy:
          mode: COMPLIANCE
          days: 1

  my-s3-bucket-with-an-object:
    # currently no other features are supported such as bucket versioning, etc.  If you need additional features, you can use the s3-policy type to give a service access to an existing bucket.

    type: s3   # creates an s3 bucket in each environment and gives the listed services permissions to access the bucket

    readonly: true  # services are granted read only access to the bucket

    services:  # services that require access to the bucket.
      - "web"

    environments:
      # NOTE: [bucket names must be unique across all AWS accounts in the AWS (Standard Regions) Partition](https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html) and need to be defined for each environment

      development:
        bucket_name: my-bucket-dev

      production:
        bucket_name: my-bucket-prod

    objects:
      - key: healthcheck.txt
        body: |
          HEALTHCHECK WORKS!
        content_type: text/plain

  ##### s3-policy example:

  my-s3-bucket-bucket-access:
    type: s3-policy  # gives the listed services permissions to access an existing bucket

    services:  # services that require access to the bucket.
      - "web"

    environments:
      default:
        bucket_name: my-bucket
  
  my-s3-bucket-static:
    type: s3
    serve_static_content: true
