name: Quality Checks

on: [push]

jobs:
  tests:
    name: Test against Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.12", "3.11", "3.10", "3.9"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Display Python version
        run: python --version

      - name: Install dependencies
        run: |
          pip install poetry
          poetry install

      - name: Run pytest
        run: poetry run pytest
        env:
          PYTHON_VERSION: ${{ matrix.python-version }}

  lint:
    name: Run lint checks
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          pip install poetry
          poetry install

      - name: black
        run: poetry run pre-commit run black --all-files

      - name: mixed-line-ending
        run: poetry run pre-commit run mixed-line-ending --all-files

      - name: detect-private-key
        run: poetry run pre-commit run detect-private-key --all-files

      - name: autoflake
        run: poetry run pre-commit run autoflake --all-files

      - name: docformatter
        run: poetry run pre-commit run docformatter --all-files

      - name: docs
        run: poetry run pre-commit run docs --all-files
        
  notify_slack:
    name: Notify slack on github action failure
    runs-on: ubuntu-latest
    needs: [tests, lint]
    if: ${{ always() && (needs.tests.result != 'success' || needs.lint.result != 'success') }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x" # Specify the required Python version

      - name: Install dependencies
        run: |
          pip install poetry
          poetry install

      # - name: Send Slack notification
      #   run: |
      #     MESSAGE=""
      #     for job in tests lint; do
      #       if [ "${{ needs[ $job ].result }}" != "success" ]; then
      #         if [ -n "$MESSAGE" ]; then
      #           MESSAGE="$MESSAGE\n"
      #         fi
      #         MESSAGE="${MESSAGE}:alert: @here $job checks have failed in <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|GitHub Actions> :sob:"
      #       fi
      #     done
      #     echo "$MESSAGE"
          
      - name: Send Slack notification
        run: |
          MESSAGE=""
          if [ "${{ needs.tests.result }}" != "success" ]; then
            MESSAGE="@here Tests have failed in <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|GitHub Actions>"
          elif [ "${{ needs.lint.result }}" != "success" ]; then
            MESSAGE="@here Lint checks have failed in <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|GitHub Actions>"
          fi
          echo " Here is the message to send to Slack ----> ${MESSAGE}"

      - name: Run platform-helper
        run: |
          cd dbt_platform_helper
          poetry run platform-helper notify add-comment "${{ secrets.SLACK_CHANNEL_ID }}" "${{ secrets.SLACK_TOKEN }}" "" "${MESSAGE}"


