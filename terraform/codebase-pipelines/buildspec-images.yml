version: 0.2

env:
  parameter-store:
    SLACK_TOKEN: /codebuild/slack_oauth_token

phases:
  install:
    commands:
      - >
        if [ -f .copilot/phases/install.sh ]; then 
          bash .copilot/phases/install.sh; 
        fi

  pre_build:
    commands:
      - >
        if [ -f .copilot/phases/pre_build.sh ]; then 
          bash .copilot/phases/pre_build.sh; 
        fi

  build:
    commands:
      - >
        if [ -f .copilot/phases/build.sh ]; then 
          bash .copilot/phases/build.sh; 
        fi
      - /work/cli build --publish --send-notifications

  post_build:
    commands:
      - >
        if [ -f .copilot/phases/post_build.sh ]; then 
          bash .copilot/phases/post_build.sh; 
        fi
        
        if [ "${CODEBUILD_BUILD_SUCCEEDING}" != "1" ]; then
          BUILD_ID_PREFIX=$(echo $CODEBUILD_BUILD_ID | cut -d':' -f1)
          echo "BUILD_ID_PREFIX - ${BUILD_ID_PREFIX}"

          # Install Platform Helper
          ## Clone platform-tools
          cd "${CODEBUILD_SRC_DIR}"
          codestar_connection_id=$(echo "${CODESTAR_CONNECTION_ARN##*/}")
          export GIT_CLONE_BASE_URL="https://codestar-connections.${AWS_REGION}.amazonaws.com/git-http/${AWS_ACCOUNT_ID}/${AWS_REGION}/$codestar_connection_id/uktrade"
          git config --global credential.helper '!aws codecommit credential-helper $@'
          git config --global credential.UseHttpPath true
          git config --global advice.detachedHead false
          git clone "${GIT_CLONE_BASE_URL}/platform-tools.git" --branch "${PLATFORM_HELPER_VERSION}" --depth 1 platform-tools
          cd "${CODEBUILD_SRC_DIR}/platform-tools"
          echo -e "\nCurrent platform-tools branch/commit: $(git rev-parse --abbrev-ref HEAD)/$(git rev-parse HEAD)"
          ## Set up python venv
          echo -e "Set up venv"
          rm -rf venv
          python -m venv --copies venv
          echo -e "\nUpdating paths"
          echo -e "\nActivating virtual environment"
          source venv/bin/activate
          ## yq for yaml processing
          pip install yq --quiet
        
          ## Build platform-helper
          echo -e "\n\n### Build and install platform-helper cloned from ${PLATFORM_HELPER_VERSION}\n"
          echo -e "Installing dependencies"
          pip install poetry
          poetry install
          echo -e "\nBuild platform-helper\n"
          poetry build --no-interaction --format sdist --no-ansi --local-version ${PLATFORM_HELPER_VERSION}
          echo -e "\nInstall platform-helper\n"
          most_recent_built_wheel_package=$(ls -t1 dist | grep ".whl" | head -1)
          pip install "dist/${most_recent_built_wheel_package}"
          echo -e "\nCheck which platform-helper\n"
          which platform-helper
          echo -e "\nCheck platform-helper --version\n"
          platform-helper --version

          MESSAGE=":no_entry::building_construction: Image build failure in codebuild project: <https://eu-west-2.console.aws.amazon.com/codesuite/codebuild/${AWS_ACCOUNT_ID}/projects/${BUILD_ID_PREFIX}/build/${CODEBUILD_BUILD_ID}/?region=eu-west-2|${BUILD_ID_PREFIX} - build ${CODEBUILD_BUILD_NUMBER}>"

          platform-helper notify add-comment "${SLACK_CHANNEL_ID}" "${SLACK_TOKEN}" "" "${MESSAGE}"
        fi
