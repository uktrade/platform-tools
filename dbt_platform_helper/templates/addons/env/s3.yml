# {% extra_header %}
# {% version_info %}
Transform: AWS::LanguageExtensions

Parameters:
  # Copilot required Parameters...
  App:
    Type: String
    Description: Your application's name.
  Env:
    Type: String
    Description: The environment name your service, job, or workflow is being deployed to.

Mappings:
  {{ addon_config.prefix }}EnvironmentConfigMap:
    # Create an entry for each environment
{% for env_name, config in addon_config.environments.items() %}
    {{ env_name }}:
      BucketName: '{{ config.bucket_name }}'
      DeletionPolicy: {{ config.deletion_policy }}
  {%- if config.retention_policy %}
      RetentionMode: {{ config.retention_policy.mode }}
    {%- if config.retention_policy.days %}
      RetentionDurationType: Days
      RetentionDuration: {{ config.retention_policy.days }}
    {%- else %}
      RetentionDurationType: Years
      RetentionDuration: {{ config.retention_policy.years }}
    {%- endif %}
  {%- endif %}
{%- endfor %}

Conditions:
  {{ addon_config.prefix }}ApplyRetentionPolicy: !Not
    - !Equals
      - !FindInMap
        - {{ addon_config.prefix }}EnvironmentConfigMap
        - !Ref Env
        - RetentionMode
        - DefaultValue: No retention
      - No retention
  {{ addon_config.prefix }}RetentionPolicyDurationIsInDays: !Equals
    - !FindInMap
      - {{ addon_config.prefix }}EnvironmentConfigMap
      - !Ref Env
      - RetentionDurationType
      - DefaultValue: Days
    - Days

Resources:
  {{ addon_config.prefix }}KMSKey:
    Type: "AWS::KMS::Key"
    DeletionPolicy: !FindInMap [{{ addon_config.prefix }}EnvironmentConfigMap, !Ref Env, DeletionPolicy]
    UpdateReplacePolicy: Retain
    Properties:
      Description: "KMS Key for RDS encryption"
      KeyPolicy:
        Version: '2012-10-17'
        Id: !Sub '${App}-${Env}-{{ addon_config.prefix }}-key'
        Statement:
        - Sid: Enable IAM User Permissions
          Effect: Allow
          Principal:
            AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
          Action: kms:*
          Resource: '*'

  {{ addon_config.prefix }}KeyAlias:
    Type: 'AWS::KMS::Alias'
    DeletionPolicy: !FindInMap [{{ addon_config.prefix }}EnvironmentConfigMap, !Ref Env, DeletionPolicy]
    UpdateReplacePolicy: Retain
    Properties:
      AliasName: !Sub 'alias/${App}-${Env}-{{ addon_config.prefix }}-key'
      TargetKeyId: !Ref {{ addon_config.prefix }}KMSKey

  {{ addon_config.prefix }}Bucket:
    Metadata:
      'aws:copilot:description': 'An Amazon S3 bucket to store and retrieve objects for {{ addon_config.prefix }}'
    Type: AWS::S3::Bucket
    DeletionPolicy: !FindInMap [{{ addon_config.prefix }}EnvironmentConfigMap, !Ref Env, DeletionPolicy]
    UpdateReplacePolicy: Retain
    Properties:
      BucketName: !FindInMap [{{ addon_config.prefix }}EnvironmentConfigMap, !Ref Env, BucketName]
      AccessControl: Private
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: aws:kms
            KMSMasterKeyID: !Ref {{ addon_config.prefix }}KMSKey
      ObjectLockConfiguration:
        !If
        - {{ addon_config.prefix }}ApplyRetentionPolicy
        - ObjectLockEnabled: Enabled
          Rule:
            DefaultRetention: !If
              - {{ addon_config.prefix }}RetentionPolicyDurationIsInDays
              - Mode: !FindInMap [{{ addon_config.prefix }}EnvironmentConfigMap, !Ref Env, RetentionMode]
                Days: !FindInMap
                  - {{ addon_config.prefix }}EnvironmentConfigMap
                  - !Ref Env
                  - RetentionDuration
              - Mode: !FindInMap [{{ addon_config.prefix }}EnvironmentConfigMap, !Ref Env, RetentionMode]
                Years: !FindInMap
                  - {{ addon_config.prefix }}EnvironmentConfigMap
                  - !Ref Env
                  - RetentionDuration
        - !Ref AWS::NoValue
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: Copilot-application
          Value: !Ref App
        - Key: Copilot-environment
          Value: !Ref Env
        - Key: Copilot-deletion-policy
          Value: !FindInMap [{{ addon_config.prefix }}EnvironmentConfigMap, !Ref Env, DeletionPolicy]

  {{ addon_config.prefix }}BucketPolicy:
    Metadata:
      'aws:copilot:description': 'A bucket policy to deny unencrypted access to the bucket and its contents'
    Type: AWS::S3::BucketPolicy
    DeletionPolicy: !FindInMap [{{ addon_config.prefix }}EnvironmentConfigMap, !Ref Env, DeletionPolicy]
    UpdateReplacePolicy: Retain
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: ForceHTTPS
            Effect: Deny
            Principal: '*'
            Action: 's3:*'
            Resource:
              - !Sub ${ {{ addon_config.prefix }}Bucket.Arn}/*
              - !Sub ${ {{ addon_config.prefix }}Bucket.Arn}
            Condition:
              Bool:
                "aws:SecureTransport": false
      Bucket: !Ref {{ addon_config.prefix }}Bucket

{% if 'objects' in addon_config %}
  {{ addon_config.prefix }}S3ObjectUploader:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${App}-${Env}-object-uploader"
      Handler: index.handler
      Runtime: python3.11
      MemorySize: 128
      Timeout: 10
      Role: !GetAtt {{ addon_config.prefix }}S3ObjectUploaderRole.Arn
      Code:
        ZipFile: |
{{ addon_config.custom_resources.s3_object(10) }}

  {{ addon_config.prefix }}S3ObjectUploaderRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${App}-${Env}-object-uploader-role"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 'sts:AssumeRole'
            Principal:
              Service:
                - lambda.amazonaws.com
      Policies:
        - PolicyName: !Sub "${App}-${Env}-object-uploader-policy"
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 's3:PutObject'
                  - 's3:DeleteObject'
                Resource:
                  - !Sub ${ {{ addon_config.prefix }}Bucket.Arn }/*
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: 'arn:aws:logs:*:*:*'
              - Effect: Allow
                Action:
                  - 'kms:GenerateDataKey'
                Resource: !GetAtt {{ addon_config.prefix }}KMSKey.Arn

{% for s3object in addon_config.objects %}
  {{ addon_config.prefix }}S3Object{{ loop.index0 }}:
    Type: 'Custom::S3ObjectUploader'
    Properties:
      ServiceToken: !GetAtt {{ addon_config.prefix }}S3ObjectUploader.Arn
      CopilotApplication: !Sub "${App}"
      CopilotEnvironment: !Sub "${Env}"
      S3Bucket: !Ref {{ addon_config.prefix }}Bucket
      S3ObjectKey: {{ s3object.key }}
      S3ObjectBody: {{ s3object.body }}
{% endfor %}
{% endif %}

Outputs:
  {{ addon_config.prefix }}Name:
    Description: "The name of a user-defined bucket."
    Value: !Ref {{ addon_config.prefix }}Bucket

  {{ addon_config.prefix }}KMSKeyARN:
    Description: "ARN of the KMS Key"
    Value: !GetAtt {{ addon_config.prefix }}KMSKey.Arn
    Export:
      Name: !Sub "${App}-${Env}-{{ addon_config.prefix }}-KMSKeyARN"
