# {% version_info %}

Parameters:
  # Copilot required Parameters...
  App:
    Type: String
    Description: Your application's name.
  Env:
    Type: String
    Description: The environment name your service, job, or workflow is being deployed to.

  # Parameters from the parent stack brought in via addons.parameters.yml...
  EnvironmentSecurityGroup:
    Type: String
  PrivateSubnets:
    Type: String
  VpcId:
    Type: String

Mappings:
  {{ addon_config.prefix }}EnvironmentConfigMap:
{%- for env_name, config in addon_config.environments.items() %}
    {{ env_name }}:
      EngineVersion: '{{ config.engine }}'
      CacheNodeType: '{{ config.instance }}'
      NumReplicas: {{ config.replicas }}
      DeletionPolicy: {{ config.deletion_policy }}
{%- endfor %}

  {{ addon_config.prefix }}EngineVersionMap:
    '7.1':
      CacheParameterGroupFamily: 'redis7.x'
    '7.0':
      CacheParameterGroupFamily: 'redis7.x'
    '6.2':
      CacheParameterGroupFamily: 'redis6.x'
    '6.0':
      CacheParameterGroupFamily: 'redis6.x'
    '5.0.6':
      CacheParameterGroupFamily: 'redis5.0'
    '5.0.4':
      CacheParameterGroupFamily: 'redis5.0'
    '5.0.3':
      CacheParameterGroupFamily: 'redis5.0'
    '5.0.0':
      CacheParameterGroupFamily: 'redis5.0'
    '4.0.10':
      CacheParameterGroupFamily: 'redis4.0'
    '3.2.6':
      CacheParameterGroupFamily: 'redis3.2'

Conditions:
  {{ addon_config.prefix }}HasAutomaticFailoverEnabled: !Not [!Equals [!FindInMap [{{ addon_config.prefix }}EnvironmentConfigMap, !Ref Env, NumReplicas], 0]]
  {{ addon_config.prefix }}CreateProdSubFilter: !Or [!Equals [!Ref Env, prod], !Equals [!Ref Env, production], !Equals [!Ref Env, PROD], !Equals [!Ref Env, PRODUCTION]]

Resources:

  {{ addon_config.prefix }}CacheParameterGroup:
    Type: 'AWS::ElastiCache::ParameterGroup'
    DeletionPolicy: !FindInMap [{{ addon_config.prefix }}EnvironmentConfigMap, !Ref Env, DeletionPolicy]
    UpdateReplacePolicy: Retain
    Properties:
      CacheParameterGroupFamily: !FindInMap
        - {{ addon_config.prefix }}EngineVersionMap
        - !FindInMap [{{ addon_config.prefix }}EnvironmentConfigMap, !Ref Env, EngineVersion]
        - CacheParameterGroupFamily
      Description: !Ref 'AWS::StackName'
      Properties: {}

  {{ addon_config.prefix }}CacheSubnetGroupName:
    Type: 'AWS::ElastiCache::SubnetGroup'
    DeletionPolicy: !FindInMap [{{ addon_config.prefix }}EnvironmentConfigMap, !Ref Env, DeletionPolicy]
    UpdateReplacePolicy: Retain
    Properties:
      Description: !Ref 'AWS::StackName'
      SubnetIds: !Split [ ",", !Ref PrivateSubnets ]

  {{ addon_config.prefix }}SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    DeletionPolicy: !FindInMap [{{ addon_config.prefix }}EnvironmentConfigMap, !Ref Env, DeletionPolicy]
    UpdateReplacePolicy: Retain
    Properties:
      GroupDescription: !Ref 'AWS::StackName'
      VpcId: !Ref VpcId
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 6379
        ToPort: 6379
        SourceSecurityGroupId: !Ref EnvironmentSecurityGroup
      Tags:
        - Key: Name
          Value: !Sub 'copilot-${App}-${Env}-{{ addon_config.name }}-Redis-SecurityGroup'

  {{ addon_config.prefix }}ReplicationGroup:
    Type: 'AWS::ElastiCache::ReplicationGroup'
    DeletionPolicy: !FindInMap [{{ addon_config.prefix }}EnvironmentConfigMap, !Ref Env, DeletionPolicy]
    UpdateReplacePolicy: Retain
    Properties:
      ReplicationGroupDescription: !Ref 'AWS::StackName'
      AtRestEncryptionEnabled: true
      AutomaticFailoverEnabled: !If [{{ addon_config.prefix }}HasAutomaticFailoverEnabled, true, false]
      MultiAZEnabled: !If [{{ addon_config.prefix }}HasAutomaticFailoverEnabled, true, false]
      CacheNodeType: !FindInMap [{{ addon_config.prefix }}EnvironmentConfigMap, !Ref Env, CacheNodeType]
      CacheParameterGroupName: !Ref {{ addon_config.prefix }}CacheParameterGroup
      CacheSubnetGroupName: !Ref {{ addon_config.prefix }}CacheSubnetGroupName
      Engine: redis
      EngineVersion: !FindInMap [{{ addon_config.prefix }}EnvironmentConfigMap, !Ref Env, EngineVersion]
      NumNodeGroups: 1   # run in non clustered mode with 1 master and 0-5 replicas
      ReplicasPerNodeGroup: !FindInMap [{{ addon_config.prefix }}EnvironmentConfigMap, !Ref Env, NumReplicas]
      PreferredMaintenanceWindow: 'sat:07:00-sat:08:00'
      LogDeliveryConfigurations:
        - DestinationDetails:
            CloudWatchLogsDetails:
              LogGroup: !Sub '/aws/elasticache/${App}/${Env}/{{ addon_config.prefix }}/slow'
          DestinationType: cloudwatch-logs
          LogFormat: json
          LogType: slow-log
        - DestinationDetails:
            CloudWatchLogsDetails:
              LogGroup: !Sub '/aws/elasticache/${App}/${Env}/{{ addon_config.prefix }}/engine'
          DestinationType: cloudwatch-logs
          LogFormat: json
          LogType: engine-log
      SecurityGroupIds:
      - !Ref {{ addon_config.prefix }}SecurityGroup

      TransitEncryptionEnabled: true
      # UpdatePolicy:
      #   UseOnlineResharding: true

  {{ addon_config.prefix }}RedisSlowLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/elasticache/${App}/${Env}/{{ addon_config.prefix }}/slow'
      RetentionInDays: 7
      Tags:
        - Key: 'Copilot-Application'
          Value: !Sub ${App}
        - Key: 'Copilot-Environment'
          Value: !Sub ${Env}

  {{ addon_config.prefix }}RedisEngineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/elasticache/${App}/${Env}/{{ addon_config.prefix }}/engine'
      RetentionInDays: 7
      Tags:
        - Key: 'Copilot-Application'
          Value: !Sub ${App}
        - Key: 'Copilot-Environment'
          Value: !Sub ${Env}

  # Redis endpoint stored in SSM so that other `services` can retrieve the endpoint.
  {{ addon_config.prefix }}EndpointAddressParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub '/copilot/${App}/${Env}/secrets/{{ addon_config.secret_name }}'   # Other services can retrieve the endpoint from this path.
      Type: String
      Value: !Sub
        - 'rediss://${url}:${port}'
        - url: !GetAtt '{{ addon_config.prefix }}ReplicationGroup.PrimaryEndPoint.Address'
          port: !GetAtt '{{ addon_config.prefix }}ReplicationGroup.PrimaryEndPoint.Port'

  {{ addon_config.prefix }}SubscriptionFilterEngine:
    Type: AWS::Logs::SubscriptionFilter
    DependsOn:
      - {{ addon_config.prefix }}RedisEngineLogGroup
    Properties:
      RoleArn: !Sub 'arn:aws:iam::${AWS::AccountId}:role/CWLtoSubscriptionFilterRole'
      LogGroupName: !Sub '/aws/elasticache/${App}/${Env}/{{ addon_config.prefix }}/engine'
      FilterName: !Sub '/aws/elasticache/${App}/${Env}/${{ '{' }}{{ addon_config.prefix }}ReplicationGroup}/engine'
      FilterPattern: ''
      DestinationArn: !If [{{ addon_config.prefix }}CreateProdSubFilter, '{{ log_destination.prod }}', '{{ log_destination.dev }}']

  {{ addon_config.prefix }}SubscriptionFilterSlow:
    Type: AWS::Logs::SubscriptionFilter
    DependsOn:
      - {{ addon_config.prefix }}RedisSlowLogGroup
    Properties:
      RoleArn: !Sub 'arn:aws:iam::${AWS::AccountId}:role/CWLtoSubscriptionFilterRole'
      LogGroupName: !Sub '/aws/elasticache/${App}/${Env}/{{ addon_config.prefix }}/slow'
      FilterName: !Sub '/aws/elasticache/${App}/${Env}/${{ '{' }}{{ addon_config.prefix }}ReplicationGroup}/slow'
      FilterPattern: ''
      DestinationArn: !If [{{ addon_config.prefix }}CreateProdSubFilter, '{{ log_destination.prod }}', '{{ log_destination.dev }}']
