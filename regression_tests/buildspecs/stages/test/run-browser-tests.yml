version: 0.2

env:
  parameter-store:
    SLACK_TOKEN: /codebuild/slack_oauth_token
    SLACK_CHANNEL_ID: /codebuild/slack_oauth_channel

phases:
  install:
    commands:
#      - echo -e "\nListing contents of PWD"
#      - ls -la

#      - echo -e "\n Print current codebuild job CODEBUILD_SRC_DIR"
#      - ls -la $CODEBUILD_SRC_DIR/

#      -----------------------------------------------
      - echo "-----------------CODEBUILD ID------------------------------"
      - echo $CODEBUILD_BUILD_ID
      - BUILD_ID=$(echo $CODEBUILD_BUILD_ID | cut -d ':' -f 2)
      - echo $BUILD_ID

#      # Remove pyenv shims from PATH to ensure they don't override virtualenv
#      - echo "Removing pyenv shims from PATH"
#      - export PATH=$(echo "$PATH" | sed -e 's|/.pyenv/shims:||' -e 's|/.pyenv/bin:||')

#      - export VIRTUAL_ENV="$CODEBUILD_SRC_DIR/codestar-connections.eu-west-2.amazonaws.com/git-http/763451185160/eu-west-2/$BUILD_ID/uktrade/platform-tools/venv"
#      - echo "Virtual environment path after - $VIRTUAL_ENV"

#      -----------------------------------------------
      - echo "-----------------NEW PATH CONSTRUCT------------------------------"
      - echo $CODEBUILD_SRC_DIR
      - export CONSTRUCTED_PATH="$CODEBUILD_SRC_DIR/codestar-connections.eu-west-2.amazonaws.com/git-http/763451185160/eu-west-2/$BUILD_ID/uktrade/platform-tools/venv"
      - echo $CONSTRUCTED_PATH


#      -----------------------------------------------
      - echo "-----------------OLD PATH REPLACE------------------------------"
      # Find and replace all occurrences of old paths in the restored venv
      - OLD_PATH_PATTERN="/codebuild/output/src[^/]+/src/codestar-connections.eu-west-2.amazonaws.com/git-http/763451185160/eu-west-2/[^/]+/uktrade/platform-tools/venv"

      # Replace any instance of old paths in the 'venv' folder with the new one
      - find venv/ -type f -exec sed -i "s|$OLD_PATH_PATTERN|$CONSTRUCTED_PATH|g" {} +
        # Update the activate script to use the new path
      - |
        find venv/bin/ -type f -name "activate*" -exec sed -i "
        s|^export VIRTUAL_ENV=.*|export VIRTUAL_ENV=\"$CONSTRUCTED_PATH\"|;
        s|^_OLD_VIRTUAL_PATH=.*|_OLD_VIRTUAL_PATH=\"$OLD_PATH\"|;
        s|^_OLD_VIRTUAL_PYTHONHOME=.*|_OLD_VIRTUAL_PYTHONHOME=\"$OLD_PATH\"|;
        " {} +


#      -----------------------------------------------
      - echo "-----------------PRE ACTIVATION OF VENV------------------------------"
      # Activate virtual env is active
      - echo "PATH VARIABLE BEFORE ACTIVATION"
      - echo $PATH


#      -----------------------------------------------
      - echo "-----------------ACTIVATE VENV------------------------------"
      - echo -e "\nActivate virtual Python environment from previous stage"
      - source venv/bin/activate
#      Running command source $VIRTUAL_ENV/bin/activate
#      /codebuild/output/src288323067/src/codestar-connections.eu-west-2.amazonaws.com/git-http/763451185160/eu-west-2/347ec9b9-2069-4623-b51c-ae4c45bae4d9/uktrade/platform-tools/venv/bin/activate:
#      No such file or directory


#      -----------------------------------------------
      - echo "-----------------POST ACTIVATION OF VENV------------------------------"
      - echo "PATH VARIABLE AFTER ACTIVATION"
#      - export PATH="$CODEBUILD_SRC_DIR/venv/bin:$PATH"
      - echo $PATH


#      -----------------------------------------------
      - echo "-----------------SET VIRTUAL_ENV------------------------------"
      - export VIRTUAL_ENV=$CONSTRUCTED_PATH
      - echo $VIRTUAL_ENV


#      -----------------------------------------------
      - echo "-----------------SET PATH------------------------------"
      - export PATH="$VIRTUAL_ENV/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/codebuild/user/bin"
      - echo $PATH"


#      -----------------------------------------------
      - echo "-----------------LIST VENV/BIN CONTENTS------------------------------"
      - ls venv/bin

#      - echo -e "\nCAT out ACTIVATE files"
#      - cat venv/bin/activate
#      - cat venv/bin/activate.csh
#      - cat venv/bin/activate.fish


#      -----------------------------------------------
      - echo "-----------------VERIFY VENV IS ACTIVE & SET CORRECTLY------------------------------"
      - echo "Python in venv - $(python --version)"
      - which python
      - echo $PATH
      - echo $VIRTUAL_ENV
      - pip list


  build:
    commands:
      - echo -e "\nRunning Browser tests - BuildApplicationDeployTest stage\n"
      - venv/bin/platform-helper --version
      - ../../stages/set_up_aws_config.sh
#      - ./regression_tests/stages/set_up_aws_config.sh
#      - pip install poetry
#      - ./regression_tests/stages/ensure_not_under_maintenance.sh
#      - source ./regression_tests/stages/run_demodjango_smoke_tests.sh
#      - ./regression_tests/stages/run_maintenance_page_tests.sh

  post_build:
    commands:
      - |
        if [ "${CODEBUILD_BUILD_SUCCEEDING}" != "1" ] && git branch --contains $CODEBUILD_RESOLVED_SOURCE_VERSION | grep -q "main"; then
          MESSAGE=":alert: @here DBT Platform regression tests have failed in <https://eu-west-2.console.aws.amazon.com/codesuite/codebuild/763451185160/projects/platform-tools-test/build/${CODEBUILD_BUILD_ID}/?region=eu-west-2|build ${CODEBUILD_BUILD_NUMBER}> :sob:"
          platform-helper notify add-comment "${SLACK_CHANNEL_ID}" "${SLACK_TOKEN}" "" "${MESSAGE}"
        fi

artifacts:
  files:
    - '**/*'
