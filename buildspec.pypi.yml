version: 0.2

env:
  shell: bash
  parameter-store:
    PYPI_TOKEN: "pypi-token"

phases:
  install:
    commands:
      - echo -e "\nSetting local Python versions"
      - pyenv versions | awk 'match($0, /[0-9]\.[0-9]+\.[0-9]+/) { print substr($0, RSTART, RLENGTH) }' | tac > .python-version
      - |
        echo -e "\nCheck we are using the latest installed Python 3.x"
        python --version
      - echo -e "\nInstalling dependencies"
      - pip install poetry
      - poetry install

  build:
    commands:
      - echo -e "\nRunning unit tests"
      - poetry run tox
      - echo -e "\nRunning regression tests"
      # Todo: Swap this out for the full regression tests when we have them
      - ./regression_tests/pull_request_tests.sh
      - echo -e "\nBuild and publish to PyPi"
       - |
         VERSION=$(python utils/check_pypi.py --version)
         if ! python utils/check_pypi.py
         then
           echo Building Python package
           poetry build
           echo Publishing Python package ${VERSION}
           poetry config pypi-token.pypi ${PYPI_TOKEN}
           poetry publish
           echo Checking the package has reached PyPI
           python utils/check_pypi.py --max-attempts 20
           # Get the version number only and publish to Slack
           echo -e "\nSending slack notification"
           VERSION_NUMBER=($VERSION)
           python utils/notify/publish_notification.py --publish-version ${VERSION_NUMBER[1]}
         else
           echo ${VERSION} of the package has already been published
         fi
